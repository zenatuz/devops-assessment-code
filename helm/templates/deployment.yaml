apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: {{.Values.app.name}}
    app.kubernetes.io/name: {{.Values.app.name}}
  name: {{.Values.app.name}}
  namespace: {{.Values.app.namespace}}
spec:
  progressDeadlineSeconds: 600
  replicas: {{.Values.app.replicas}}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{.Values.app.name}}
      app.kubernetes.io/name: {{.Values.app.name}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{.Values.app.name}}
        app.kubernetes.io/name: {{.Values.app.name}}
    spec:
      containers:
      - name: {{.Values.app.name}}
        image: {{.Values.app.image}}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 15

        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
